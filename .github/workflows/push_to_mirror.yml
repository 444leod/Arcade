name: Arcade

on: [push, pull_request]

env:
  MIRROR_URL: "git@github.com:EpitechPromo2027/B-OOP-400-LIL-4-1-arcade-leo.dumont.git"

jobs:
  build:
    name: Test compilations
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker:latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test Makefile rules
        timeout-minutes: 2
        run: |
          make
          make re
          make clean
          make fclean

  test:
    name: Run tests
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker:latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run tests
        timeout-minutes: 2
        run: |
          make tests_run

  check_coding_style:
    name: Check coding style
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check the coding style with `coding-style`
        run: check.sh $(pwd) $(pwd)

      - name: Coding style report
        run: |
          while read line; do
            file=$(echo $line | cut -d":" -f1)
            line_number=$(echo $line | cut -d":" -f2)
            level=$(echo $(echo $line | cut -d":" -f3 | cut -d" " -f2) coding style error)
            code=$(echo $line | cut -d":" -f4-)
            echo "::error file=$file,line=$line_number,title=$level::$code"
          done < "coding-style-reports.log"

      - name: Exit with error if there is coding style error(s)
        run: |
          if test -s coding-style-reports.log; then
              exit 1
          fi

  push_to_mirror:
    name: Push to mirror
    needs: [build, test, check_coding_style]
    if: ${{ github.ref_name == 'main' && github.event_name == 'push' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Push to mirror
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ env.MIRROR_URL }}
          ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
